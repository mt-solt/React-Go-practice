services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - GIN_MODE=release
      - POSTGRES_DSN=host=postgres port=5432 user=randomuser password=randompass dbname=randomdb sslmode=disable
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network

  postgres:
    image: postgres:16-bullseye
    environment:
      POSTGRES_DB: randomdb
      POSTGRES_USER: randomuser
      POSTGRES_PASSWORD: randompass
    ports:
      - "5432:5432"
    volumes:
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U randomuser -d randomdb"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge 
    